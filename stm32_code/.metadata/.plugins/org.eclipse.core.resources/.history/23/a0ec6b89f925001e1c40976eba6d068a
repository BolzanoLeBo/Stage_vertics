/*
 * cache.s
 *
 *  Created on: 19 juil. 2023
 *      Author: loict
 */

  .syntax unified

  .text
  .global strcopy
  .global instr
  .thumb_func

strcopy :              /* r0 points to destination string.*/
	                  /* r1 points to source string.*/
	ldrb r2, [r1],#1  /*; Load byte and update address.*/
	strb r2, [r0],#1  /* Store byte and update address.*/
	cmp r2, #0        /* Check for zero terminator.*/
	bne strcopy       /* Keep going if not.*/
	bx lr

instr :
	mov r0, #2
	mov r1, #3
	mov r2, #4
	add r0, r1, r2
	ldr r0, [lr]
	mul r1, r0, r1
	mov r0, #2
	mov r1, #3
	mov r2, #4
	add r0, r1, r2
	mul r1, r0, r1
	mov r0, #2
	mov r1, #3
	mov r2, #4
	add r0, r1, r2
	ldr r0, [lr]
	mul r1, r0, r1
	mov r0, #2
	mov r1, #3
	add r0, r1, r2
	ldr r0, [lr]
	mul r1, r0, r1
	mov r1, #3
	mov r2, #4
	add r0, r1, r2
	ldr r0, [lr]
	mul r1, r0, r1
	mov r1, #3
	mov r2, #4
	add r0, r1, r2
	ldr r0, [lr]
	mul r1, r0, r1
	mov r0, #2
	mov r1, #3
	mov r2, #4
	add r0, r1, r2
	ldr r0, [lr]
	mul r1, r0, r1
	mov r0, #2
	mov r1, #3
	mul r1, r0, r1
	mov r0, #2
	mov r1, #3
	mov r2, #4
	add r0, r1, r2
	ldr r0, [lr]
	mul r1, r0, r1
	bx lr
